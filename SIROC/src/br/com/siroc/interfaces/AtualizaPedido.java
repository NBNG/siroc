/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.siroc.interfaces;

import br.com.siroc.Editor.Editor;
import br.com.siroc.Editor.LeitorTeclas;
import br.com.siroc.Jasper.Relatorio;
import br.com.siroc.dao.DAO;
import br.com.siroc.modelo.Pedido;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author matteus
 */
public class AtualizaPedido extends javax.swing.JFrame {

    /**
     * Creates new form Atualiza_Pedido
     */
    Object[] resultado;

    Pedido pedido;

    DAO<Pedido> pdao = new DAO<>(Pedido.class);
    List<Object[]> list;
    ListagemPedidos lista;
    JDesktopPane painel;

    public AtualizaPedido(Object[] resultado,
            ListagemPedidos lista, JDesktopPane painel) {
        super("Cella - Atualização de Clientes");
        this.list = list;
        this.resultado = resultado;
        pedido = pdao.busca((Long) resultado[10]); //Garofolo
        pedido = pdao.busca((Long) resultado[10]); //Garofolo
        pedido.setValorTotal((Double) resultado[5]);
        initComponents();
        setLocationRelativeTo(null);
        this.setResizable(false);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/br/com/siroc/Imagens/icone.png")));
        populateFields(pedido);
        hinter();
        this.setFocusable(true);
        this.addKeyListener(new LeitorTeclas());
        this.lista = lista;
        this.painel = painel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLCliente = new javax.swing.JLabel();
        jLData = new javax.swing.JLabel();
        jLValor = new javax.swing.JLabel();
        jLFrete = new javax.swing.JLabel();
        jLEndereco = new javax.swing.JLabel();
        jLTipoPagamento = new javax.swing.JLabel();
        jLTipoPedido = new javax.swing.JLabel();
        jDCData = new com.toedter.calendar.JDateChooser();
        jCBPedido = new javax.swing.JComboBox();
        jCBPagamento = new javax.swing.JComboBox();
        jBAtualizar = new javax.swing.JButton();
        jLCabecalho = new javax.swing.JLabel();
        jLFornecedor = new javax.swing.JLabel();
        jLAjuda = new javax.swing.JLabel();
        jBCancelar = new javax.swing.JButton();
        jBImprimir1 = new javax.swing.JButton();
        jBImprimir = new javax.swing.JButton();
        jCBPago = new javax.swing.JComboBox();
        jTValor = new javax.swing.JTextField();
        jBVisualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLCliente.setText("Cliente");

        jLData.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLData.setText("Data:");

        jLValor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLValor.setText("Valor Total:");

        jLFrete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLFrete.setText("Frete:");

        jLEndereco.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLEndereco.setText("Cidade");

        jLTipoPagamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLTipoPagamento.setText("Tipo Pagamento:");

        jLTipoPedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLTipoPedido.setText("Tipo Pedido:");

        jDCData.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jCBPedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBPedido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NF", "SO" }));

        jCBPagamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBPagamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cartão", "Cheque", "Depósito", "Dinheiro" }));

        jBAtualizar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/salvar.png"))); // NOI18N
        jBAtualizar.setText("Atualizar");
        jBAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAtualizarActionPerformed(evt);
            }
        });

        jLCabecalho.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLCabecalho.setText("Atualização de Pedidos");

        jLFornecedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLFornecedor.setText("Fornecedor");

        jLAjuda.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/help.png"))); // NOI18N
        jLAjuda.setText("Ajuda");
        jLAjuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLAjudaMouseClicked(evt);
            }
        });

        jBCancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/excluir.gif"))); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBImprimir1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBImprimir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/pdf (1).png"))); // NOI18N
        jBImprimir1.setText("Gerar PDF");
        jBImprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimir1ActionPerformed(evt);
            }
        });

        jBImprimir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/imprimir.png"))); // NOI18N
        jBImprimir.setText("Imprimir");
        jBImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimirActionPerformed(evt);
            }
        });

        jCBPago.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pago", "Parcialmente", "" }));

        jTValor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jBVisualizar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBVisualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/visualizar.png"))); // NOI18N
        jBVisualizar.setText("Visualizar Pedido");
        jBVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLCabecalho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLAjuda))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLData)
                                .addGap(18, 18, 18)
                                .addComponent(jDCData, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLFornecedor)
                            .addComponent(jLCliente)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCBPago, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLValor)
                                .addGap(52, 52, 52)
                                .addComponent(jLFrete))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLEndereco, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLTipoPedido)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCBPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLTipoPagamento)))
                                .addGap(18, 18, 18)
                                .addComponent(jCBPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(184, 184, 184)
                                .addComponent(jBAtualizar)
                                .addGap(18, 18, 18)
                                .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addGap(557, 557, 557)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBVisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBImprimir1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBImprimir, jBImprimir1});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBAtualizar, jBCancelar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLAjuda)
                    .addComponent(jLCabecalho))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLCliente)
                        .addGap(18, 18, 18)
                        .addComponent(jLFornecedor)
                        .addGap(11, 11, 11)
                        .addComponent(jLEndereco)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLData)
                            .addComponent(jDCData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLValor)
                            .addComponent(jLFrete))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLTipoPedido)
                            .addComponent(jCBPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLTipoPagamento)
                            .addComponent(jCBPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBImprimir1)
                        .addGap(18, 18, 18)
                        .addComponent(jBVisualizar)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jBAtualizar)
                                .addComponent(jBCancelar))
                            .addComponent(jBImprimir))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAtualizarActionPerformed
        try {
            String pago = (String) jCBPago.getSelectedItem();

            pedido.setData(jDCData.getDate());
            pedido.setStatus(pago);
            pedido.setTipo_pagamento((String) jCBPagamento.getSelectedItem());
            pedido.setTipo_pedido((String) jCBPedido.getSelectedItem());
            pedido.setObs(jTValor.getText());
            pdao.atualiza(pedido);
            JOptionPane.showMessageDialog(AtualizaPedido.this,
                    "Pedido alterado com sucesso!",
                    "Activity Performed Successfully",
                    JOptionPane.INFORMATION_MESSAGE);

            limpar();
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Causa: \b" + ex,
                    "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBAtualizarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        int resposta = JOptionPane.showConfirmDialog(AtualizaPedido.this, "Deseja Realmente excluir o pedido?", "Remove Data", JOptionPane.OK_CANCEL_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            pdao.remover(pedido);
            JOptionPane.showMessageDialog(AtualizaPedido.this, "Pedido excluído com sucesso!", "Activity Performed Successfully", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBImprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimir1ActionPerformed
        try {
            Relatorio rel = new Relatorio();
            rel.gerarPedido((Long) resultado[10], 0, (String) resultado[3]);
            JOptionPane.showMessageDialog(AtualizaPedido.this, "PDF criado com sucesso!", "Activity Performed Successfully", JOptionPane.WARNING_MESSAGE);
        } catch (IOException | JRException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro em procurar arquivo. Contate o administrador do sistema!\n" + ex);
        }
    }//GEN-LAST:event_jBImprimir1ActionPerformed

    private void jBImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimirActionPerformed
        try {
            Relatorio rel = new Relatorio();
            rel.gerarPedido((Long) resultado[10], 1, (String) resultado[3]);
        } catch (IOException ex) {
            Logger.getLogger(AtualizaPedido.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro em procurar arquivo. Contate o administrador do sistema!\n" + ex);
        }
    }//GEN-LAST:event_jBImprimirActionPerformed

    private void jLAjudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLAjudaMouseClicked
        if (evt.getButton() != evt.BUTTON3 && evt.getClickCount() == 2) {
            String caminho = System.getenv("USERPROFILE")
                    + "\\Documents\\nbng\\siroc\\ajuda\\Manual do Proprietário - "
                    + "SIROC versão 1.9.9.pdf";
            File arquivo = new File(caminho);
            try {
                Desktop.getDesktop().open(arquivo);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex, "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jLAjudaMouseClicked

    private void jBVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVisualizarActionPerformed
        try {
            Relatorio rel = new Relatorio();
            rel.gerarPedido((Long) resultado[10], 2, (String) resultado[3]);

        } catch (IOException | JRException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro em procurar arquivo. Contate o administrador do sistema!\n" + ex);
        }
    }//GEN-LAST:event_jBVisualizarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAtualizar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBImprimir;
    private javax.swing.JButton jBImprimir1;
    private javax.swing.JButton jBVisualizar;
    private javax.swing.JComboBox jCBPagamento;
    private javax.swing.JComboBox jCBPago;
    private javax.swing.JComboBox jCBPedido;
    private com.toedter.calendar.JDateChooser jDCData;
    private javax.swing.JLabel jLAjuda;
    private javax.swing.JLabel jLCabecalho;
    private javax.swing.JLabel jLCliente;
    private javax.swing.JLabel jLData;
    private javax.swing.JLabel jLEndereco;
    private javax.swing.JLabel jLFornecedor;
    private javax.swing.JLabel jLFrete;
    private javax.swing.JLabel jLTipoPagamento;
    private javax.swing.JLabel jLTipoPedido;
    private javax.swing.JLabel jLValor;
    private javax.swing.JTextField jTValor;
    // End of variables declaration//GEN-END:variables
   public void populateFields(Pedido pedido) {
        jLCliente.setText("Cliente: " + pedido.getCliente().getNome());

        jLFornecedor.setText("Fornecedor: " + (String) resultado[4]);
        jLEndereco.setText(pedido.getCliente().getCidade() + " - " + pedido.getCliente().getEstado());

        //jLFornecedor.setText((String) resultado[4]);
        jLEndereco.setText(pedido.getCliente().getCidade() + " - " + pedido.getCliente().getEstado());
        jTValor.setText(pedido.getObs());
        jDCData.setDate(pedido.getData());
        for (int i = 0; i < jCBPago.getItemCount(); i++) {
            if (jCBPago.getItemAt(i).equals((String) resultado[6])) {
                jCBPago.setSelectedIndex(i);
            }
        }
        jLValor.setText("Valor Total: " + Editor.format(pedido.getValorTotal()));
        jLFrete.setText("Frete: " + Editor.format(pedido.getItens().
                get(0).getProduto().getFornecedor().getFrete()));
        for (int i = 0; i < jCBPagamento.getItemCount(); i++) {
            if (jCBPagamento.getItemAt(i).equals(pedido.getTipo_pagamento())) {
                jCBPagamento.setSelectedIndex(i);
            }
        }
        for (int i = 0; i < jCBPedido.getItemCount(); i++) {
            if (jCBPedido.getItemAt(i).equals(pedido.getTipo_pedido())) {
                jCBPedido.setSelectedIndex(i);
            }
        }
    }

    private void hinter() {
        jLAjuda.setToolTipText("<html>Esta é a tela de atualização de Pedidos,<br>"
                + " onde serão atualizados dados relativos as informações já cadastradas. <br>"
                + "1. Lembre-se de preencher os dados obrigatórios sempre, para serem evitados erros.<br>"
                + "2. Nesta tela apenas alguns dados podem ser atualizados, caso seja necessário alterar outros componentes,<br>"
                + "é necessário deletar este pedido e fazer outro.<br>"
                + " Tal escolha auxiliará na máscara utilizada para o cadastro do seu respectivo código.<br>"
                + "3. Após o preenchimento, clique no botão atualizar para que seja executada a atualização.<br>"
                + "4. O botão Cancelar pedido exclui o mesmo.<br>"
                + "5. Há a opção de gerar PDF's e/ou imprimi-los.<br>"
                + "6. Para consultar o Manual do Proprietário, basta dar um duplo clique em \"Ajuda\" ou tecle F1.</html>");
    }

    private void limpar() throws ParseException {
        lista.dispose();
        ListagemPedidos cl = new ListagemPedidos(painel);
        painel.add(cl);
        cl.setVisible(true);
        this.dispose();
    }
}
