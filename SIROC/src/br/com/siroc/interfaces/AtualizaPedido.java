/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.siroc.interfaces;

import br.com.siroc.Editor.Editor;
import br.com.siroc.Editor.LeitorTeclas;
import br.com.siroc.Jasper.Relatorio;
import br.com.siroc.builder.ItemBuilder;
import br.com.siroc.dao.DAO;
import br.com.siroc.dao.ValorDAO;
import br.com.siroc.modelo.Item;
import br.com.siroc.modelo.Pedido;
import br.com.siroc.modelo.Produto;
import br.com.siroc.modelo.Valores;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author matteus
 */
public class AtualizaPedido extends javax.swing.JFrame {

    /**
     * Creates new form Atualiza_Pedido
     */
    Object[] resultado;

    Pedido pedido;
    private String caracteres = "0987654321.,";
    DAO<Pedido> pdao = new DAO<>(Pedido.class);
    DAO<Produto> prodao = new DAO<>(Produto.class);
    DAO<Item> itdao = new DAO<>(Item.class);
    List<Object[]> list;
    List<Produto> listProduto;
    List<Item> listItem = new ArrayList<>();
    List<Item> itens = new ArrayList<>();
    ListagemPedidos lista;
    List<Long> ids = new ArrayList<>();
    JDesktopPane painel;
    List<Valores> valores;
    ValorDAO vdao = new ValorDAO();
    Item item;
    Double totalValor = 0.;
    Double totalPeso = 0.;
    int count = 0;
    DefaultTableModel tmProduto_Fornecedor = new DefaultTableModel(null, new String[]{"Nome", "Peso", "Valor", "Fornecedor"}) {
        boolean[] canEdit = new boolean[]{
            false, false, false, false, false
        };

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }
    };
    DefaultTableModel tmProduto_Pedido = new DefaultTableModel(null, new String[]{"Código P.", "Nome", "Quantidade", "Valor Alterado", "C. Lista"}) {
        boolean[] canEdit = new boolean[]{
            false, false, false, false
        };

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }
    };

    public AtualizaPedido(Object[] resultado,
            ListagemPedidos lista, JDesktopPane painel) {
        super("Cella - Atualização de Clientes");
        this.resultado = resultado;
        pedido = pdao.busca((Long) resultado[10]); //Garofolo
        pedido.setValorTotal((Double) resultado[5]);
        initComponents();
        setLocationRelativeTo(null);
        this.setResizable(false);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/br/com/siroc/Imagens/icone.png")));
        populateFields(pedido);
        hinter();
        this.setFocusable(true);
        this.addKeyListener(new LeitorTeclas());
        this.lista = lista;
        this.painel = painel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLCliente = new javax.swing.JLabel();
        jLData = new javax.swing.JLabel();
        jLValor = new javax.swing.JLabel();
        jLFrete = new javax.swing.JLabel();
        jLEndereco = new javax.swing.JLabel();
        jLTipoPagamento = new javax.swing.JLabel();
        jLTipoPedido = new javax.swing.JLabel();
        jDCData = new com.toedter.calendar.JDateChooser();
        jCBPedido = new javax.swing.JComboBox();
        jCBPagamento = new javax.swing.JComboBox();
        jBAtualizar = new javax.swing.JButton();
        jLCabecalho = new javax.swing.JLabel();
        jLFornecedor = new javax.swing.JLabel();
        jLAjuda = new javax.swing.JLabel();
        jBCancelar = new javax.swing.JButton();
        jBImprimir1 = new javax.swing.JButton();
        jBImprimir = new javax.swing.JButton();
        jTValor = new javax.swing.JTextField();
        jBVisualizar = new javax.swing.JButton();
        jBImprimir2 = new javax.swing.JButton();
        jLRestante = new javax.swing.JLabel();
        jCBPago = new javax.swing.JComboBox();
        jLPrazo = new javax.swing.JLabel();
        jTPrazo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaPedido = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaFornecedor = new javax.swing.JTable();
        jBCancelar1 = new javax.swing.JButton();
        jTProduto = new javax.swing.JTextField();
        jLProduto = new javax.swing.JLabel();
        jLTotalValor = new javax.swing.JLabel();
        jLTotalPeso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLCliente.setText("Cliente");

        jLData.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLData.setText("Data:");

        jLValor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLValor.setText("Valor Total:");

        jLFrete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLFrete.setText("Frete:");

        jLEndereco.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLEndereco.setText("Cidade");

        jLTipoPagamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLTipoPagamento.setText("Tipo Pagamento:");

        jLTipoPedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLTipoPedido.setText("Tipo Pedido:");

        jDCData.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jCBPedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBPedido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NF", "SO" }));

        jCBPagamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBPagamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cartão", "Cheque", "Depósito", "Dinheiro" }));

        jBAtualizar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/salvar.png"))); // NOI18N
        jBAtualizar.setText("Atualizar");
        jBAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAtualizarActionPerformed(evt);
            }
        });

        jLCabecalho.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLCabecalho.setText("Atualização de Pedidos");

        jLFornecedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLFornecedor.setText("Fornecedor");

        jLAjuda.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/help.png"))); // NOI18N
        jLAjuda.setText("Ajuda");
        jLAjuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLAjudaMouseClicked(evt);
            }
        });

        jBCancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/excluir.gif"))); // NOI18N
        jBCancelar.setText("Remover");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBImprimir1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBImprimir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/pdf (1).png"))); // NOI18N
        jBImprimir1.setText("Gerar PDF");
        jBImprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimir1ActionPerformed(evt);
            }
        });

        jBImprimir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/imprimir.png"))); // NOI18N
        jBImprimir.setText("Imprimir");
        jBImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimirActionPerformed(evt);
            }
        });

        jTValor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTValorKeyTyped(evt);
            }
        });

        jBVisualizar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBVisualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/visualizar.png"))); // NOI18N
        jBVisualizar.setText("Visualizar Pedido");
        jBVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVisualizarActionPerformed(evt);
            }
        });

        jBImprimir2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBImprimir2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/imprimir.png"))); // NOI18N
        jBImprimir2.setText("Imprimir ½ Página");
        jBImprimir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimir2ActionPerformed(evt);
            }
        });

        jLRestante.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLRestante.setText("Restante:");

        jCBPago.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Em Aberto", "Parcialmente", "Pago" }));

        jLPrazo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLPrazo.setText("Prazo:");

        jTPrazo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTPrazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTPrazoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Sinal: R$");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Produtos Fornecedor");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Produtos Pedido");

        TabelaPedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TabelaPedido.setModel(tmProduto_Pedido);
        TabelaPedido.setRowHeight(23);
        TabelaPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaPedidoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaPedido);

        TabelaFornecedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TabelaFornecedor.setModel(tmProduto_Fornecedor);
        TabelaFornecedor.setRowHeight(23);
        TabelaFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaFornecedorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TabelaFornecedor);

        jBCancelar1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/excluir.gif"))); // NOI18N
        jBCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelar1ActionPerformed(evt);
            }
        });

        jTProduto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTProdutoActionPerformed(evt);
            }
        });
        jTProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTProdutoKeyTyped(evt);
            }
        });

        jLProduto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLProduto.setText("Produto:");

        jLTotalValor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLTotalValor.setText("Total Valor:");

        jLTotalPeso.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLTotalPeso.setText("Total Peso:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jLCabecalho)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLAjuda)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLCliente)
                            .addComponent(jLFornecedor)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCBPago, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLRestante))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLValor)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLData)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDCData, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLFrete))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLPrazo)
                                        .addGap(10, 10, 10)
                                        .addComponent(jTPrazo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLEndereco))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBImprimir)
                                .addGap(76, 76, 76))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBImprimir2)
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jBImprimir1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBVisualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(41, 41, 41))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLTipoPedido)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCBPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(jLTipoPagamento))
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addComponent(jCBPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(431, 431, 431)
                                .addComponent(jLabel3))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addComponent(jLProduto)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBCancelar1))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLTotalValor)
                                    .addGap(153, 153, 153)
                                    .addComponent(jLTotalPeso)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(26, 26, 26)
                                    .addComponent(jBCancelar))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(37, 37, 37)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLAjuda)
                    .addComponent(jLCabecalho))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBVisualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBImprimir1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBImprimir2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBImprimir))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLFornecedor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLEndereco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLRestante)
                                    .addComponent(jCBPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTPrazo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLPrazo))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jDCData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLData)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLValor)
                                    .addComponent(jLFrete))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLTipoPedido)
                                    .addComponent(jCBPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLTipoPagamento)
                                    .addComponent(jCBPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(jBCancelar1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLProduto))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBAtualizar)
                    .addComponent(jBCancelar)
                    .addComponent(jLTotalValor)
                    .addComponent(jLTotalPeso))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAtualizarActionPerformed
        if (!listItem.isEmpty()) {
            for (int i = 0; i < listItem.size(); i++) {
                itdao.adicionar(listItem.get(i));
            }
        }
        for (int i = 0; i < ids.size(); i++) {
            System.out.println(ids.get(i));
        }

        /*try {
         String pago = (String) jCBPago.getSelectedItem();
         Date data = jDCData.getDate();
         List<Item> listItem = new ArrayList<Item>();
         Item item;

         if (!jTPrazo.getText().equals("")) {
         Calendar cal = Calendar.getInstance();
         cal.setTime(data);
         cal.add(cal.DAY_OF_MONTH, Integer.parseInt(jTPrazo.getText()));
         data = cal.getTime();

         }

         for (int i = 0; i < pedido.getItens().size(); i++) {
         //Long id, Produto produto, Pedido pedido, Integer quantidade, Double valor_alterado
         item = new Item();
         item.setId((Long) tmProduto_Fornecedor.getValueAt(i, 0));
         item.setPedido(pedido);
         item.setProduto(pedido.getItens().get(i).getProduto());
         item.setQuantidade(Integer.parseInt(tmProduto_Pedido.getValueAt(i, 2).toString()));
         item.setValor_alterado(Double.parseDouble(tmProduto_Pedido.getValueAt(i, 3).toString()));
         listItem.add(item);
         }
         pedido.setItens(listItem);

         pedido.setVencimento(data);
         pedido.setData(jDCData.getDate());
         pedido.setStatus(pago);
         pedido.setTipo_pagamento((String) jCBPagamento.getSelectedItem());
         pedido.setTipo_pedido((String) jCBPedido.getSelectedItem());

         if (!jTValor.getText().equals("")) {
         pedido.setObs(Double.parseDouble(jTValor.getText()));
         }

         pdao.atualiza(pedido);
         JOptionPane.showMessageDialog(AtualizaPedido.this,
         "Pedido alterado com sucesso!",
         "Activity Performed Successfully",
         JOptionPane.INFORMATION_MESSAGE);
         limpar();
         } catch (ParseException ex) {
         JOptionPane.showMessageDialog(this, "Causa: \b" + ex,
         "ERROR", JOptionPane.ERROR_MESSAGE);
         }*/
    }//GEN-LAST:event_jBAtualizarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        try {
            int resposta = JOptionPane.showConfirmDialog(AtualizaPedido.this, "Deseja Realmente excluir o pedido?", "Remove Data", JOptionPane.OK_CANCEL_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                pdao.remover(pedido);
                JOptionPane.showMessageDialog(AtualizaPedido.this, "Pedido excluído com sucesso!", "Activity Performed Successfully", JOptionPane.WARNING_MESSAGE);
                limpar();
            }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Causa: \b" + ex,
                    "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBImprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimir1ActionPerformed
        try {
            Relatorio rel = new Relatorio();
            rel.gerarPedido((Long) resultado[10], 0, (String) resultado[3], 0);
            JOptionPane.showMessageDialog(AtualizaPedido.this, "PDF criado com sucesso!", "Activity Performed Successfully", JOptionPane.WARNING_MESSAGE);
        } catch (IOException | JRException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro em procurar arquivo. Contate o administrador do sistema!\n" + ex);
        }
    }//GEN-LAST:event_jBImprimir1ActionPerformed

    private void jBImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimirActionPerformed
        try {
            Relatorio rel = new Relatorio();
            rel.gerarPedido((Long) resultado[10], 1, (String) resultado[3], 0);
        } catch (IOException ex) {
            Logger.getLogger(AtualizaPedido.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro em procurar arquivo. Contate o administrador do sistema!\n" + ex);
        }
    }//GEN-LAST:event_jBImprimirActionPerformed

    private void jLAjudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLAjudaMouseClicked
        if (evt.getButton() != evt.BUTTON3 && evt.getClickCount() == 2) {
            String caminho = System.getenv("USERPROFILE")
                    + "\\Documents\\nbng\\siroc\\ajuda\\Manual do Proprietário - "
                    + "SIROC versão 1.9.9.pdf";
            File arquivo = new File(caminho);
            try {
                Desktop.getDesktop().open(arquivo);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex, "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jLAjudaMouseClicked

    private void jBVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVisualizarActionPerformed
        try {
            Relatorio rel = new Relatorio();
            rel.gerarPedido((Long) resultado[10], 2, (String) resultado[3], 0);

        } catch (IOException | JRException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro em procurar arquivo. Contate o administrador do sistema!\n" + ex);
        }
    }//GEN-LAST:event_jBVisualizarActionPerformed

    private void jBImprimir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimir2ActionPerformed
        try {
            Relatorio rel = new Relatorio();
            rel.gerarPedido((Long) resultado[10], 1, (String) resultado[3], 1);
        } catch (IOException ex) {
            Logger.getLogger(AtualizaPedido.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro em procurar arquivo. Contate o administrador do sistema!\n" + ex);
        }
    }//GEN-LAST:event_jBImprimir2ActionPerformed

    private void jTValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTValorKeyTyped
        //metodo para não aceitar letras no campo de dinheiro
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jTValorKeyTyped

    private void jTPrazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTPrazoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTPrazoActionPerformed

    private void TabelaPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaPedidoMouseClicked

    }//GEN-LAST:event_TabelaPedidoMouseClicked

    private void TabelaFornecedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaFornecedorMouseClicked
        Item itemAux = abreOptionPane();
        if (!itemAux.equals(null)) {
            listItem.add(itemAux);
            preencheTabela(listItem);
        }
    }//GEN-LAST:event_TabelaFornecedorMouseClicked
    public Item abreOptionPane() {
//        String[] options = {"OK"};
//JPanel panel = new JPanel();
//JLabel lbl = new JLabel("Enter Your name: ");
//JTextField txt = new JTextField(10);
//panel.add(lbl);
//panel.add(txt);
//int selectedOption = JOptionPane.showOptionDialog(null, panel, "The Title", JOptionPane.NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options , options[0]);
//
//if(selectedOption == 0)
//{
//    String text = txt.getText();
//    // ...
//}
//        
//        String[] options = {"OK","Cancelar"};
//        JPanel panel = new JPanel();
//        JFrame frame = new JFrame();
//        
//        JLabel lbl_quantidade = new JLabel("Quantidade: ");
//        final JTextField quantidade = new JTextField(10);
//        JLabel lbl_valor = new JLabel("Valor alterado: ");
//        JTextField valor = new JTextField(10);
//        
//        panel.add(lbl_quantidade);
//        panel.add(quantidade);
//        panel.add(lbl_valor);
//        panel.add(valor);
//        frame.getContentPane().add(panel);
//        frame.pack();
//        
//        frame.addWindowListener(new WindowAdapter() {
//            public void windowOpened(WindowEvent e){
//                quantidade.requestFocusInWindow();
//            }
//        });
//        frame.setVisible(true);
//        //int selectedOption = JOptionPane.showOptionDialog(null, frame, "Informações adicionais", JOptionPane.NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options , options[0]);
//        int selectedOption = 1;

        //String campo_quantidade;
        JTextField campo_valor = new JTextField();
        JTextField campo_quantidade = new JTextField();

        Object[] message = {
            "Valor alterado: ", campo_valor,
            "Quantidade: ", campo_quantidade};

        //campo_quantidade = JOptionPane.showInputDialog(message);
        if (JOptionPane.showConfirmDialog(this, message, "Informações Adicionais", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            String[] optionpane = {campo_quantidade.getText(), campo_valor.getText()};
            return gravaResposta(optionpane);

//        if(selectedOption == 1){
        } else {

            return null;
        }
    }

    public Item gravaResposta(String[] message) {
        valores = vdao.buscaPorNome(pedido.getCliente().getEstado());

        Double porcentagem = valores.get(0).getPorcentagem() / 100;
        try {
            item = new ItemBuilder().setPedido(pedido).setProduto(listProduto.get(TabelaFornecedor.getSelectedRow())).
                    setQuantidade(message[0]).setValor_alterado(message[1], porcentagem)
                    .getItem();

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Campos obrigatórios (*) vazios e/ou Informação inválida!", "ERROR 404 - Content not found!", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException e) {
            abreOptionPane();
        }
        return item;
    }
    private void jBCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelar1ActionPerformed
        int index = TabelaPedido.getSelectedRow();
        tmProduto_Pedido.removeRow(index);
        ids.add((Long) TabelaPedido.getValueAt(index, 4));
    }//GEN-LAST:event_jBCancelar1ActionPerformed

    private void jTProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTProdutoActionPerformed

    private void jTProdutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTProdutoKeyTyped
        while (tmProduto_Fornecedor.getRowCount() > 0) {
            tmProduto_Fornecedor.removeRow(0);
        }

        listProduto = prodao.buscaPorNome(jTProduto.getText());
        for (int i = 0; i < listProduto.size(); i++) {
            tmProduto_Fornecedor.addRow(new String[]{null, null, null, null});
            tmProduto_Fornecedor.setValueAt(listProduto.get(i).getNome(), i, 0);
            tmProduto_Fornecedor.setValueAt(listProduto.get(i).getPeso() + " kg", i, 1);
            tmProduto_Fornecedor.setValueAt(Editor.format(listProduto.get(i).getValor_saida()), i, 2);
            tmProduto_Fornecedor.setValueAt(listProduto.get(i).getFornecedor().getNome(), i, 3);

        }
    }//GEN-LAST:event_jTProdutoKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaFornecedor;
    private javax.swing.JTable TabelaPedido;
    private javax.swing.JButton jBAtualizar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBCancelar1;
    private javax.swing.JButton jBImprimir;
    private javax.swing.JButton jBImprimir1;
    private javax.swing.JButton jBImprimir2;
    private javax.swing.JButton jBVisualizar;
    private javax.swing.JComboBox jCBPagamento;
    private javax.swing.JComboBox jCBPago;
    private javax.swing.JComboBox jCBPedido;
    private com.toedter.calendar.JDateChooser jDCData;
    private javax.swing.JLabel jLAjuda;
    private javax.swing.JLabel jLCabecalho;
    private javax.swing.JLabel jLCliente;
    private javax.swing.JLabel jLData;
    private javax.swing.JLabel jLEndereco;
    private javax.swing.JLabel jLFornecedor;
    private javax.swing.JLabel jLFrete;
    private javax.swing.JLabel jLPrazo;
    private javax.swing.JLabel jLProduto;
    private javax.swing.JLabel jLRestante;
    private javax.swing.JLabel jLTipoPagamento;
    private javax.swing.JLabel jLTipoPedido;
    private javax.swing.JLabel jLTotalPeso;
    private javax.swing.JLabel jLTotalValor;
    private javax.swing.JLabel jLValor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTPrazo;
    private javax.swing.JTextField jTProduto;
    private javax.swing.JTextField jTValor;
    // End of variables declaration//GEN-END:variables
       public void preencheTabela(List<Item> Itens) {
        for (int i = 0; i < Itens.size(); i++) {
            System.out.println(TabelaPedido.getRowCount());
            System.out.println(i);
            tmProduto_Pedido.addRow(new String[]{null, null, null, null});
            tmProduto_Pedido.setValueAt(Itens.get(i).getProduto().getId(), TabelaPedido.getRowCount() - 1, 0);
            tmProduto_Pedido.setValueAt(Itens.get(i).getProduto().getNome(), TabelaPedido.getRowCount() - 1, 1);
            tmProduto_Pedido.setValueAt(Itens.get(i).getQuantidade(), TabelaPedido.getRowCount() - 1, 2);
            tmProduto_Pedido.setValueAt(Editor.format(Itens.get(i).getValor_alterado()), TabelaPedido.getRowCount() - 1, 3);

            if (count == i) {
                totalValor = totalValor + (Itens.get(i).getValor_alterado() * Itens.get(i).getQuantidade());
                totalPeso = totalPeso + (Itens.get(i).getProduto().getPeso() * Itens.get(i).getQuantidade());
            }

        }
        jLTotalValor.setText("Valor do Pedido: " + Editor.format(totalValor));
        jLTotalPeso.setText("Peso do Pedido: " + totalPeso + " kg");
        count++;
    }

    public void populateFields(Pedido pedido) {
        itens = pedido.getItens();
        jLCliente.setText("Cliente: " + pedido.getCliente().getNome());

        jLFornecedor.setText("Fornecedor: " + (String) resultado[4]);
        jLEndereco.setText(pedido.getCliente().getCidade() + " - " + pedido.getCliente().getEstado());

        //jLFornecedor.setText((String) resultado[4]);
        jLEndereco.setText(pedido.getCliente().getCidade() + " - " + pedido.getCliente().getEstado());

        if (pedido.getObs() != null) {
            jTValor.setText(Editor.format(pedido.getObs()));
            jLRestante.setText(Editor.format(pedido.getValorTotal() - pedido.getObs()));
        }

        jDCData.setDate(pedido.getData());
        for (int i = 0; i < jCBPago.getItemCount(); i++) {
            if (jCBPago.getItemAt(i).equals((String) resultado[6])) {
                jCBPago.setSelectedIndex(i);
            }
        }
        jLValor.setText("Valor Total: " + Editor.format(pedido.getValorTotal()));
        jLFrete.setText("Frete: " + Editor.format(pedido.getItens().
                get(0).getProduto().getFornecedor().getFrete()));
        for (int i = 0; i < jCBPagamento.getItemCount(); i++) {
            if (jCBPagamento.getItemAt(i).equals(pedido.getTipo_pagamento())) {
                jCBPagamento.setSelectedIndex(i);
            }
        }
        for (int i = 0; i < jCBPedido.getItemCount(); i++) {
            if (jCBPedido.getItemAt(i).equals(pedido.getTipo_pedido())) {
                jCBPedido.setSelectedIndex(i);
            }
        }

        for (int i = 0; i < pedido.getItens().size(); i++) {
            tmProduto_Pedido.addRow(new String[]{null, null, null, null});
            tmProduto_Pedido.setValueAt(pedido.getItens().get(i).getId(), i, 0);
            tmProduto_Pedido.setValueAt(pedido.getItens().get(i).getProduto().getNome(), i, 1);
            tmProduto_Pedido.setValueAt(pedido.getItens().get(i).getQuantidade(), i, 2);
            tmProduto_Pedido.setValueAt(pedido.getItens().get(i).getValor_alterado(), i, 3);
            tmProduto_Pedido.setValueAt(pedido.getItens().get(i).getId(), TabelaPedido.getRowCount() - 1, 4);
            if (count == i) {
                totalValor = totalValor + (pedido.getItens().get(i).getValor_alterado() * pedido.getItens().get(i).getQuantidade());
                totalPeso = totalPeso + (pedido.getItens().get(i).getProduto().getPeso() * pedido.getItens().get(i).getQuantidade());
            }
        }

        jLTotalValor.setText("Valor do Pedido: " + Editor.format(totalValor));
        jLTotalPeso.setText("Peso do Pedido: " + totalPeso + " kg");
        count++;
    }

    private void hinter() {
        jLAjuda.setToolTipText("<html>Esta é a tela de atualização de Pedidos,<br>"
                + " onde serão atualizados dados relativos as informações já cadastradas. <br>"
                + "1. Lembre-se de preencher os dados obrigatórios sempre, para serem evitados erros.<br>"
                + "2. Nesta tela apenas alguns dados podem ser atualizados, caso seja necessário alterar outros componentes,<br>"
                + "é necessário deletar este pedido e fazer outro.<br>"
                + " Tal escolha auxiliará na máscara utilizada para o cadastro do seu respectivo código.<br>"
                + "3. Após o preenchimento, clique no botão atualizar para que seja executada a atualização.<br>"
                + "4. O botão Cancelar pedido exclui o mesmo.<br>"
                + "5. Há a opção de gerar PDF's e/ou imprimi-los.<br>"
                + "6. Para consultar o Manual do Proprietário, basta dar um duplo clique em \"Ajuda\" ou tecle F1.</html>");
    }

    private void limpar() throws ParseException {
        lista.dispose();
        ListagemPedidos cl = new ListagemPedidos(painel);
        painel.add(cl);
        cl.setVisible(true);
        this.dispose();
    }
}
