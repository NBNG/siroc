/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.siroc.interfaces;

import br.com.siroc.Editor.Editor;
import br.com.siroc.dao.DAO;
import br.com.siroc.dao.PedidoDAO;
import br.com.siroc.modelo.Cliente;
import br.com.siroc.modelo.Fornecedor;
import br.com.siroc.modelo.Pedido;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author matteus
 */
public class ListagemPedidos extends javax.swing.JInternalFrame {

    /**
     * Creates new form Listagem_Pedidos
     */
    DefaultTableModel tmPedido = new DefaultTableModel(null, new String[]{"Data", "Cidade", "Estado", "Cliente", "Fornecedor", "Valor Total", "Frete", "Tipo de Pagamento", "Tipo de Pedido", "Pago"}) {
        boolean[] canEdit = new boolean[]{
            false, false, false, false, false, false, false, false, false, false
        };

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }
    };

    PedidoDAO peddao = new PedidoDAO();
    DAO<Pedido> pdao = new DAO<Pedido>(Pedido.class);
    List<Pedido> pedidos;
    List<Cliente> clientes;
    List<Fornecedor> fornecedores;
    HashSet cCliente;
    HashSet cEstado;
    HashSet cCidade;
    HashSet cFornecedor;
    String cliente;
    String fornecedor;
    Date dataInicial, dataFinal;
    Double valorInicial, valorFinal;
    String estado, cidade, pago, tipo_pgto, tipo_ped;
    JDesktopPane painel;
    List<Object[]> list;

    public ListagemPedidos(JDesktopPane painel) {
        super("Cella - Listagem de Produtos");
        initComponents();
        populateFields();
        this.painel = painel;
        tabela.setRowHeight(23);
        this.setSize(this.painel.getWidth(), this.painel.getHeight());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLInicio = new javax.swing.JLabel();
        jLCidade = new javax.swing.JLabel();
        jLEstado = new javax.swing.JLabel();
        jLCliente = new javax.swing.JLabel();
        jLFim = new javax.swing.JLabel();
        jLValor_Inicial = new javax.swing.JLabel();
        jLTipo_Pagamento = new javax.swing.JLabel();
        jLFornecedor = new javax.swing.JLabel();
        jLValor_Final = new javax.swing.JLabel();
        jLTipo_Pedido = new javax.swing.JLabel();
        jLPago = new javax.swing.JLabel();
        jCBCliente = new javax.swing.JComboBox();
        jCBEstado = new javax.swing.JComboBox();
        jCBCidade = new javax.swing.JComboBox();
        jCBFornecedor = new javax.swing.JComboBox();
        jCBTipo_Pagamento = new javax.swing.JComboBox();
        jCBTipo_Pedido = new javax.swing.JComboBox();
        jLCabecalho = new javax.swing.JLabel();
        jCBPago = new javax.swing.JComboBox();
        jDCData_Inicial = new com.toedter.calendar.JDateChooser();
        jDCData_Final = new com.toedter.calendar.JDateChooser();
        jTValor_Inicial = new javax.swing.JTextField();
        jTValor_Final = new javax.swing.JTextField();
        jRBCliente = new javax.swing.JRadioButton();
        jRBFornecedor = new javax.swing.JRadioButton();
        jRBData = new javax.swing.JRadioButton();
        jRBValor = new javax.swing.JRadioButton();
        jRBEstado = new javax.swing.JRadioButton();
        jRBCidade = new javax.swing.JRadioButton();
        jRBPago = new javax.swing.JRadioButton();
        jRBTipo_Pagamento = new javax.swing.JRadioButton();
        jRBTipo_Pedido = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jTBSeleciona = new javax.swing.JToggleButton();
        jBCancelar = new javax.swing.JButton();
        jBPesquisar = new javax.swing.JButton();
        jBLimpar = new javax.swing.JButton();
        jBImprimir = new javax.swing.JButton();

        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLInicio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLInicio.setText("Início:");
        getContentPane().add(jLInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 146, -1, -1));

        jLCidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLCidade.setText("Cidade:");
        getContentPane().add(jLCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 281, -1, -1));

        jLEstado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLEstado.setText("Estado:");
        getContentPane().add(jLEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 235, -1, -1));

        jLCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLCliente.setText("Cliente:");
        getContentPane().add(jLCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 57, -1, -1));

        jLFim.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLFim.setText("Fim:");
        getContentPane().add(jLFim, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 146, -1, -1));

        jLValor_Inicial.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLValor_Inicial.setText("Valor Inicial:");
        getContentPane().add(jLValor_Inicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 189, -1, -1));

        jLTipo_Pagamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLTipo_Pagamento.setText("Tipo de Pagamento:");
        getContentPane().add(jLTipo_Pagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 373, -1, -1));

        jLFornecedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLFornecedor.setText("Fornecedor:");
        getContentPane().add(jLFornecedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 103, -1, -1));

        jLValor_Final.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLValor_Final.setText("Valor Final:");
        getContentPane().add(jLValor_Final, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 189, -1, -1));

        jLTipo_Pedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLTipo_Pedido.setText("Tipo de Pedido:");
        getContentPane().add(jLTipo_Pedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 419, -1, -1));

        jLPago.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLPago.setText("Pago:");
        getContentPane().add(jLPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 327, -1, -1));

        jCBCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jCBCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 54, 397, -1));

        jCBEstado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jCBEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 232, 80, -1));

        jCBCidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jCBCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 278, 397, -1));

        jCBFornecedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jCBFornecedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 100, 377, -1));

        jCBTipo_Pagamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBTipo_Pagamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cartão", "Cheque", "Depósito", "Dinheiro" }));
        getContentPane().add(jCBTipo_Pagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 370, -1, -1));

        jCBTipo_Pedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBTipo_Pedido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NF", "SO" }));
        getContentPane().add(jCBTipo_Pedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 416, 67, -1));

        jLCabecalho.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLCabecalho.setText("Pesquisa de Pedidos");
        getContentPane().add(jLCabecalho, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 7, -1, -1));

        jCBPago.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Pago" }));
        getContentPane().add(jCBPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 324, 94, -1));

        jDCData_Inicial.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jDCData_Inicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 148, 170, -1));

        jDCData_Final.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jDCData_Final, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 146, 167, -1));

        jTValor_Inicial.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jTValor_Inicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 186, 121, -1));

        jTValor_Final.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jTValor_Final, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 186, 121, -1));

        jRBCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jRBCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, -1, -1));

        jRBFornecedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jRBFornecedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 107, -1, -1));

        jRBData.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jRBData, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 146, -1, 22));

        jRBValor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jRBValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 193, -1, -1));

        jRBEstado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jRBEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 239, -1, -1));

        jRBCidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jRBCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 285, -1, -1));

        jRBPago.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jRBPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 331, -1, -1));

        jRBTipo_Pagamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jRBTipo_Pagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 377, -1, -1));

        jRBTipo_Pedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jRBTipo_Pedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 423, -1, -1));

        tabela.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tabela.setModel(tmPedido);
        tabela.setUpdateSelectionOnSort(false);
        tabela.setVerifyInputWhenFocusTarget(false);
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(541, 54, 812, 578));

        jTBSeleciona.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTBSeleciona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/editar.png"))); // NOI18N
        jTBSeleciona.setText("Selecionar Tudo");
        jTBSeleciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBSelecionaActionPerformed(evt);
            }
        });
        getContentPane().add(jTBSeleciona, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 462, -1, -1));

        jBCancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/excluir.gif"))); // NOI18N
        jBCancelar.setText("Cancelar Pedido");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(jBCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 599, -1, -1));

        jBPesquisar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/pesquisar.png"))); // NOI18N
        jBPesquisar.setText("Pesquisar");
        jBPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(jBPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 462, -1, -1));

        jBLimpar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/limpar.png"))); // NOI18N
        jBLimpar.setText("Limpar");
        jBLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparActionPerformed(evt);
            }
        });
        getContentPane().add(jBLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 599, -1, -1));

        jBImprimir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/imprimir.png"))); // NOI18N
        jBImprimir.setText("Imprimir");
        jBImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimirActionPerformed(evt);
            }
        });
        getContentPane().add(jBImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 599, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTBSelecionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBSelecionaActionPerformed
        if (jTBSeleciona.isSelected()) {
            jRBCidade.setSelected(true);
            jRBCliente.setSelected(true);
            jRBEstado.setSelected(true);
            jRBFornecedor.setSelected(true);
            jRBData.setSelected(true);
            jRBPago.setSelected(true);
            jRBTipo_Pagamento.setSelected(true);
            jRBTipo_Pedido.setSelected(true);
            jRBValor.setSelected(true);
        } else {
            jRBCidade.setSelected(false);
            jRBCliente.setSelected(false);
            jRBEstado.setSelected(false);
            jRBFornecedor.setSelected(false);
            jRBData.setSelected(false);
            jRBPago.setSelected(false);
            jRBTipo_Pagamento.setSelected(false);
            jRBTipo_Pedido.setSelected(false);
            jRBValor.setSelected(false);
        }
    }//GEN-LAST:event_jTBSelecionaActionPerformed

    private void jBLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparActionPerformed
        ListagemPedidos lp = new ListagemPedidos(painel);
        painel.add(lp);
        lp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBLimparActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        int resposta = JOptionPane.showConfirmDialog(ListagemPedidos.this, "Deseja Realmente excluir o pedido?", "Remove Data", JOptionPane.OK_CANCEL_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            pdao.remover(null);
            JOptionPane.showMessageDialog(ListagemPedidos.this, "Pedido excluído com sucesso!", "Activity Performed Successfully", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBImprimirActionPerformed

    private void jBPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarActionPerformed
        while (tmPedido.getRowCount() > 0) {
            tmPedido.removeRow(0);
        }

        list = peddao.buscaAvançada(montaQuery());
        for (int i = 0; i < list.size(); i++) {
            Object[] resultado = list.get(i);
            tmPedido.addRow(new String[]{null, null, null, null});
            //Posições a baixo relativos as ordem das colunas do JTABLE
            tmPedido.setValueAt(Editor.formatData((Date) resultado[0]), i, 0); //Data
            tmPedido.setValueAt(resultado[1], i, 1); //Cidade
            tmPedido.setValueAt(resultado[2], i, 2); //Estado
            tmPedido.setValueAt(resultado[3], i, 3); //Cliente
            tmPedido.setValueAt(resultado[4], i, 4); //Fornecedor
            tmPedido.setValueAt(Editor.format((Double) resultado[5]), i, 5); //Valor Total
            tmPedido.setValueAt(resultado[6], i, 9); //Status
            tmPedido.setValueAt(resultado[7], i, 7); //Tipo pagamento
            tmPedido.setValueAt(resultado[8], i, 8); //Tipo de pedido
            tmPedido.setValueAt(Editor.format((Double) resultado[9]), i, 6); //Frete
        }
    }//GEN-LAST:event_jBPesquisarActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        if (evt.getButton() != evt.BUTTON3 && evt.getClickCount() == 2) {
            AtualizaPedido ap = new AtualizaPedido(list.get(tabela.getSelectedRow()));
            ap.setVisible(true);
        }
    }//GEN-LAST:event_tabelaMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBImprimir;
    private javax.swing.JButton jBLimpar;
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JComboBox jCBCidade;
    private javax.swing.JComboBox jCBCliente;
    private javax.swing.JComboBox jCBEstado;
    private javax.swing.JComboBox jCBFornecedor;
    private javax.swing.JComboBox jCBPago;
    private javax.swing.JComboBox jCBTipo_Pagamento;
    private javax.swing.JComboBox jCBTipo_Pedido;
    private com.toedter.calendar.JDateChooser jDCData_Final;
    private com.toedter.calendar.JDateChooser jDCData_Inicial;
    private javax.swing.JLabel jLCabecalho;
    private javax.swing.JLabel jLCidade;
    private javax.swing.JLabel jLCliente;
    private javax.swing.JLabel jLEstado;
    private javax.swing.JLabel jLFim;
    private javax.swing.JLabel jLFornecedor;
    private javax.swing.JLabel jLInicio;
    private javax.swing.JLabel jLPago;
    private javax.swing.JLabel jLTipo_Pagamento;
    private javax.swing.JLabel jLTipo_Pedido;
    private javax.swing.JLabel jLValor_Final;
    private javax.swing.JLabel jLValor_Inicial;
    private javax.swing.JRadioButton jRBCidade;
    private javax.swing.JRadioButton jRBCliente;
    private javax.swing.JRadioButton jRBData;
    private javax.swing.JRadioButton jRBEstado;
    private javax.swing.JRadioButton jRBFornecedor;
    private javax.swing.JRadioButton jRBPago;
    private javax.swing.JRadioButton jRBTipo_Pagamento;
    private javax.swing.JRadioButton jRBTipo_Pedido;
    private javax.swing.JRadioButton jRBValor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jTBSeleciona;
    private javax.swing.JTextField jTValor_Final;
    private javax.swing.JTextField jTValor_Inicial;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

    private void populateFields() {
        pedidos = pdao.listaTodos();
        cCliente = new HashSet();
        cEstado = new HashSet();
        cCidade = new HashSet();
        cFornecedor = new HashSet();

        for (int i = 0; i < pedidos.size(); i++) {
            cCliente.add(pedidos.get(i).getCliente().getNome());
            cEstado.add(pedidos.get(i).getCliente().getEstado());
            cCidade.add(pedidos.get(i).getCliente().getCidade());
            for (int j = 0; j < pedidos.get(i).getItens().size(); j++) {
                cFornecedor.add(pedidos.get(i).getItens().get(j).getProduto().getFornecedor().getNome());
            }
        }

        clientes = new ArrayList<Cliente>(cCliente);
        fornecedores = new ArrayList<Fornecedor>(cFornecedor);

        Iterator i = cCliente.iterator();
        while (i.hasNext()) {
            jCBCliente.addItem(i.next());
        }

        i = null;
        i = cEstado.iterator();
        while (i.hasNext()) {
            jCBEstado.addItem(i.next());
        }

        i = null;
        i = cCidade.iterator();
        while (i.hasNext()) {
            jCBCidade.addItem(i.next());
        }
        i = null;
        i = cFornecedor.iterator();
        while (i.hasNext()) {
            jCBFornecedor.addItem(i.next());
        }

    }

    public String montaQuery() {
        String query = "SELECT pedido.data,cliente.cidade,cliente.estado,cliente.nome,"
                + "fornecedor.nome,sum(item.valor_alterado*item.quantidade),pedido.status,"
                + "pedido.tipo_pagamento,pedido.tipo_pedido,(sum(item.valor_alterado*item.quantidade)*cliente.frete)/100,pedido.id "
                + "FROM Pedido pedido "
                + "INNER JOIN pedido.cliente as cliente "
                + "INNER JOIN pedido.itens as item "
                + "INNER JOIN item.produto as produto "
                + "INNER JOIN produto.fornecedor as fornecedor "
                + "WHERE 1=1 ";

//        "AND lower(fornecedor.nome) like lower('%a%') "
//                + "AND pedido.data BETWEEN '2013-01-01' AND '2013-12-30' "
//                + "AND lower(cliente.estado) like lower('%s%') "
//                + "AND lower(cliente.cidade) like lower('%c%') "
//                + "AND lower(pedido.status) like lower('%') "
//                + "AND lower(pedido.tipo_pagamento) like lower('%') "
//                + "AND lower(pedido.tipo_pedido) like lower('%') "
//                + "GROUP BY pedido.id,cliente.cidade,cliente.estado,cliente.nome, "
//                + "fornecedor.nome, cliente.frete HAVING SUM(item.valor_alterado*item.quantidade) BETWEEN 1 AND 100";
        if (jRBCliente.isSelected()) {
            cliente = jCBCliente.getSelectedItem().toString();
            query += "AND lower(cliente.nome) like lower('%" + cliente + "%') ";
        }
        if (jRBFornecedor.isSelected()) {
            fornecedor = jCBFornecedor.getSelectedItem().toString();
            query += "AND lower(fornecedor.nome) like lower('%" + fornecedor + "%')";
        }
        if (jRBCidade.isSelected()) {
            cidade = jCBCidade.getSelectedItem().toString();
            query += "AND lower(cliente.cidade) like lower('%" + cidade + "%') ";
        }
        if (jRBData.isSelected() && jDCData_Inicial.getDate() != null && jDCData_Final.getDate() != null) {
            //dataInicial = jDCData_Inicial.getDate();
            //dataFinal = jDCData_Final.getDate();
            //System.out.println("TESTE DE DATAS");
            //System.out.println(dataInicial);
            //System.out.println(dataFinal);
            //System.out.println("Alteradas");
            dataInicial = jDCData_Inicial.getDate();
            dataFinal = jDCData_Final.getDate();
            //System.out.println("dataInicial: "+dataInicial);
            //System.out.println("dataInicial: "+dataFinal);
            query += "AND pedido.data BETWEEN '" + dataInicial + "' AND '" + dataFinal + "' ";
        } else if (jRBData.isSelected()) {
            JOptionPane.showMessageDialog(ListagemPedidos.this, "Pesquisa efetuada sem datas. \n Valores não foram escolhidos");
        }

        if (jRBEstado.isSelected()) {
            estado = jCBEstado.getSelectedItem().toString();
            query += "AND lower(cliente.estado) like lower('" + estado + "') ";
        }

        if (jRBPago.isSelected()) {
            pago = jCBPago.getSelectedItem().toString();
            query += "AND lower(pedido.status) like lower('" + pago + "') ";
        }
        if (jRBTipo_Pagamento.isSelected()) {
            tipo_pgto = jCBTipo_Pagamento.getSelectedItem().toString();
            query += "AND lower(pedido.tipo_pagamento) like lower('" + tipo_pgto + "') ";
        }
        if (jRBTipo_Pedido.isSelected()) {
            tipo_ped = jCBTipo_Pedido.getSelectedItem().toString();
            query += "AND lower(pedido.tipo_pedido) like lower('" + tipo_ped + "') ";
        }
        query += "GROUP BY pedido.data,cliente.cidade,cliente.estado,cliente.nome, fornecedor.nome, cliente.frete, pedido.status,"
                + "pedido.tipo_pagamento,pedido.tipo_pedido,pedido.id ";
        if (jRBValor.isSelected() && !jTValor_Inicial.getText().equals("") && !jTValor_Final.getText().equals("")) {
            //fazer sum e between
            valorInicial = Double.parseDouble(jTValor_Inicial.getText().replace(",", "."));
            valorFinal = Double.parseDouble(jTValor_Final.getText().replace(",", "."));
            query += " HAVING SUM(item.valor_alterado*item.quantidade) BETWEEN " + valorInicial + " AND " + valorFinal + " ";

        } else if (jRBValor.isSelected()) {

            JOptionPane.showMessageDialog(ListagemPedidos.this, "Pesquisa efetuada sem valores(R$). \n Valores(R$) não foram escolhidos");
        }
        return query;
    }
}
