/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.siroc.interfaces;

import br.com.siroc.Editor.Editor;
import br.com.siroc.dao.DAO;
import br.com.siroc.dao.PedidoDAO;
import br.com.siroc.modelo.Cliente;
import br.com.siroc.modelo.Fornecedor;
import br.com.siroc.modelo.Pedido;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author matteus
 */
public class ListagemPedidos extends javax.swing.JInternalFrame {

    /**
     * Creates new form Listagem_Pedidos
     */
    DefaultTableModel tmPedido = new DefaultTableModel(null, new String[]{"Data", "Cidade", "Estado", "Cliente", "Fornecedor", "Valor Total", "Frete", "Tipo de Pagamento", "Tipo de Pedido", "Pago"}) {
        boolean[] canEdit = new boolean[]{
            false, false, false, false, false, false, false, false, false, false
        };

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }
    };

    PedidoDAO peddao = new PedidoDAO();
    DAO<Pedido> pdao = new DAO<Pedido>(Pedido.class);

    List<Pedido> pedidos;
    List<Cliente> clientes;
    List<Fornecedor> fornecedores;

    HashSet cCliente;
    HashSet cEstado;
    HashSet cCidade;
    HashSet cFornecedor;

    String cliente;
    String fornecedor;

    Date dataInicial, dataFinal;

    Double valorInicial, valorFinal;
    String estado, cidade, pago, tipo_pgto, tipo_ped;
    JDesktopPane painel;

    List<Object[]> list; //pesquisa avançada

    public ListagemPedidos(JDesktopPane painel) {
        super("Cella - Listagem de Produtos");
        initComponents();
        populateFields();
        this.painel = painel;
        tabela.setRowHeight(23);
        hinter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLInicio = new javax.swing.JLabel();
        jLCidade = new javax.swing.JLabel();
        jLEstado = new javax.swing.JLabel();
        jLCliente = new javax.swing.JLabel();
        jLFim = new javax.swing.JLabel();
        jLValor_Inicial = new javax.swing.JLabel();
        jLTipo_Pagamento = new javax.swing.JLabel();
        jLFornecedor = new javax.swing.JLabel();
        jLValor_Final = new javax.swing.JLabel();
        jLTipo_Pedido = new javax.swing.JLabel();
        jLPago = new javax.swing.JLabel();
        jCBCliente = new javax.swing.JComboBox();
        jCBEstado = new javax.swing.JComboBox();
        jCBCidade = new javax.swing.JComboBox();
        jCBFornecedor = new javax.swing.JComboBox();
        jCBTipo_Pagamento = new javax.swing.JComboBox();
        jCBTipo_Pedido = new javax.swing.JComboBox();
        jLCabecalho = new javax.swing.JLabel();
        jCBPago = new javax.swing.JComboBox();
        jDCData_Inicial = new com.toedter.calendar.JDateChooser();
        jDCData_Final = new com.toedter.calendar.JDateChooser();
        jTValor_Inicial = new javax.swing.JTextField();
        jTValor_Final = new javax.swing.JTextField();
        jRBCliente = new javax.swing.JRadioButton();
        jRBFornecedor = new javax.swing.JRadioButton();
        jRBData = new javax.swing.JRadioButton();
        jRBValor = new javax.swing.JRadioButton();
        jRBEstado = new javax.swing.JRadioButton();
        jRBCidade = new javax.swing.JRadioButton();
        jRBPago = new javax.swing.JRadioButton();
        jRBTipo_Pagamento = new javax.swing.JRadioButton();
        jRBTipo_Pedido = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jTBSeleciona = new javax.swing.JToggleButton();
        jBPesquisar = new javax.swing.JButton();
        jBLimpar = new javax.swing.JButton();
        jLAjuda = new javax.swing.JLabel();

        setClosable(true);

        jLInicio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLInicio.setText("Início:");

        jLCidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLCidade.setText("Cidade:");

        jLEstado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLEstado.setText("Estado:");

        jLCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLCliente.setText("Cliente:");

        jLFim.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLFim.setText("Fim:");

        jLValor_Inicial.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLValor_Inicial.setText("Valor Inicial:");

        jLTipo_Pagamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLTipo_Pagamento.setText("Tipo de Pagamento:");

        jLFornecedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLFornecedor.setText("Fornecedor:");

        jLValor_Final.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLValor_Final.setText("Valor Final:");

        jLTipo_Pedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLTipo_Pedido.setText("Tipo de Pedido:");

        jLPago.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLPago.setText("Pago:");

        jCBCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jCBEstado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jCBCidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jCBFornecedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jCBTipo_Pagamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBTipo_Pagamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cartão", "Cheque", "Depósito", "Dinheiro" }));

        jCBTipo_Pedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBTipo_Pedido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NF", "SO" }));

        jLCabecalho.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLCabecalho.setText("Pesquisa de Pedidos");

        jCBPago.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Pago" }));

        jDCData_Inicial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jDCData_Final.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTValor_Inicial.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTValor_Final.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRBCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRBFornecedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRBData.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRBValor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRBEstado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRBCidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRBPago.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRBTipo_Pagamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRBTipo_Pedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        tabela.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tabela.setModel(tmPedido);
        tabela.setUpdateSelectionOnSort(false);
        tabela.setVerifyInputWhenFocusTarget(false);
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        jTBSeleciona.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTBSeleciona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/editar.png"))); // NOI18N
        jTBSeleciona.setText("Selecionar Tudo");
        jTBSeleciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBSelecionaActionPerformed(evt);
            }
        });

        jBPesquisar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/pesquisar.png"))); // NOI18N
        jBPesquisar.setText("Pesquisar");
        jBPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarActionPerformed(evt);
            }
        });

        jBLimpar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/limpar.png"))); // NOI18N
        jBLimpar.setText("Limpar");
        jBLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparActionPerformed(evt);
            }
        });

        jLAjuda.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/siroc/Imagens/help.png"))); // NOI18N
        jLAjuda.setText("Ajuda");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRBData)
                        .addGap(18, 18, 18)
                        .addComponent(jLInicio)
                        .addGap(18, 18, 18)
                        .addComponent(jDCData_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLFim)
                        .addGap(18, 18, 18)
                        .addComponent(jDCData_Final, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRBValor)
                        .addGap(18, 18, 18)
                        .addComponent(jLValor_Inicial)
                        .addGap(18, 18, 18)
                        .addComponent(jTValor_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLValor_Final)
                        .addGap(18, 18, 18)
                        .addComponent(jTValor_Final, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRBEstado)
                        .addGap(18, 18, 18)
                        .addComponent(jLEstado)
                        .addGap(18, 18, 18)
                        .addComponent(jCBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jRBCidade)
                        .addGap(18, 18, 18)
                        .addComponent(jLCidade)
                        .addGap(18, 18, 18)
                        .addComponent(jCBCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jRBPago)
                        .addGap(18, 18, 18)
                        .addComponent(jLPago)
                        .addGap(18, 18, 18)
                        .addComponent(jCBPago, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRBTipo_Pagamento)
                        .addGap(18, 18, 18)
                        .addComponent(jLTipo_Pagamento)
                        .addGap(18, 18, 18)
                        .addComponent(jCBTipo_Pagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jRBTipo_Pedido)
                        .addGap(18, 18, 18)
                        .addComponent(jLTipo_Pedido)
                        .addGap(18, 18, 18)
                        .addComponent(jCBTipo_Pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTBSeleciona)
                        .addGap(18, 18, 18)
                        .addComponent(jBPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)))
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLCabecalho)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLAjuda))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRBCliente)
                                .addGap(18, 18, 18)
                                .addComponent(jLCliente)
                                .addGap(18, 18, 18)
                                .addComponent(jCBCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jRBFornecedor)
                                .addGap(18, 18, 18)
                                .addComponent(jLFornecedor)
                                .addGap(18, 18, 18)
                                .addComponent(jCBFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBLimpar)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTValor_Final, jTValor_Inicial});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLCabecalho)
                    .addComponent(jLAjuda))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLFornecedor))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addComponent(jRBCliente))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLCliente))
                        .addComponent(jCBCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jRBFornecedor))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jRBValor))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLValor_Inicial))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTValor_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLValor_Final)
                        .addComponent(jTValor_Final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRBData, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLInicio)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLFim)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDCData_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDCData_Final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addComponent(jRBEstado))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLEstado))
                        .addComponent(jCBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(jRBCidade)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCBCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLCidade))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCBPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLPago))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jRBPago)))
                        .addGap(3, 3, 3)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jRBTipo_Pagamento))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLTipo_Pagamento))
                    .addComponent(jCBTipo_Pagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLTipo_Pedido))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCBTipo_Pedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBPesquisar)
                        .addComponent(jTBSeleciona))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jRBTipo_Pedido)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBLimpar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTBSelecionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBSelecionaActionPerformed
        if (jTBSeleciona.isSelected()) {
            jRBCidade.setSelected(true);
            jRBCliente.setSelected(true);
            jRBEstado.setSelected(true);
            jRBFornecedor.setSelected(true);
            jRBData.setSelected(true);
            jRBPago.setSelected(true);
            jRBTipo_Pagamento.setSelected(true);
            jRBTipo_Pedido.setSelected(true);
            jRBValor.setSelected(true);
        } else {
            jRBCidade.setSelected(false);
            jRBCliente.setSelected(false);
            jRBEstado.setSelected(false);
            jRBFornecedor.setSelected(false);
            jRBData.setSelected(false);
            jRBPago.setSelected(false);
            jRBTipo_Pagamento.setSelected(false);
            jRBTipo_Pedido.setSelected(false);
            jRBValor.setSelected(false);
        }
    }//GEN-LAST:event_jTBSelecionaActionPerformed

    private void jBLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparActionPerformed
        ListagemPedidos lp = new ListagemPedidos(painel);
        painel.add(lp);
        lp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBLimparActionPerformed

    private void jBPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarActionPerformed
        while (tmPedido.getRowCount() > 0) {
            tmPedido.removeRow(0);
        }

        list = peddao.buscaAvançada(montaQuery());
        for (int i = 0; i < list.size(); i++) {
            Object[] resultado = list.get(i);
            tmPedido.addRow(new String[]{null, null, null, null});
            //Posições a baixo relativos as ordem das colunas do JTABLE
            tmPedido.setValueAt(Editor.formatData((Date) resultado[0]), i, 0); //Data
            tmPedido.setValueAt(resultado[1], i, 1); //Cidade
            tmPedido.setValueAt(resultado[2], i, 2); //Estado
            tmPedido.setValueAt(resultado[3], i, 3); //Cliente
            tmPedido.setValueAt(resultado[4], i, 4); //Fornecedor
            tmPedido.setValueAt(Editor.format((Double) resultado[5]), i, 5); //Valor Total
            tmPedido.setValueAt(resultado[6], i, 9); //Status
            tmPedido.setValueAt(resultado[7], i, 7); //Tipo pagamento
            tmPedido.setValueAt(resultado[8], i, 8); //Tipo de pedido
            tmPedido.setValueAt(Editor.format((Double) resultado[9]), i, 6); //Frete
            //[10] é o ID do PEDIDO
        }
    }//GEN-LAST:event_jBPesquisarActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        if (evt.getButton() != evt.BUTTON3 && evt.getClickCount() == 2) {
            AtualizaPedido ap = new AtualizaPedido(list.get(tabela.getSelectedRow()));
            ap.setVisible(true);
        }
    }//GEN-LAST:event_tabelaMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBLimpar;
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JComboBox jCBCidade;
    private javax.swing.JComboBox jCBCliente;
    private javax.swing.JComboBox jCBEstado;
    private javax.swing.JComboBox jCBFornecedor;
    private javax.swing.JComboBox jCBPago;
    private javax.swing.JComboBox jCBTipo_Pagamento;
    private javax.swing.JComboBox jCBTipo_Pedido;
    private com.toedter.calendar.JDateChooser jDCData_Final;
    private com.toedter.calendar.JDateChooser jDCData_Inicial;
    private javax.swing.JLabel jLAjuda;
    private javax.swing.JLabel jLCabecalho;
    private javax.swing.JLabel jLCidade;
    private javax.swing.JLabel jLCliente;
    private javax.swing.JLabel jLEstado;
    private javax.swing.JLabel jLFim;
    private javax.swing.JLabel jLFornecedor;
    private javax.swing.JLabel jLInicio;
    private javax.swing.JLabel jLPago;
    private javax.swing.JLabel jLTipo_Pagamento;
    private javax.swing.JLabel jLTipo_Pedido;
    private javax.swing.JLabel jLValor_Final;
    private javax.swing.JLabel jLValor_Inicial;
    private javax.swing.JRadioButton jRBCidade;
    private javax.swing.JRadioButton jRBCliente;
    private javax.swing.JRadioButton jRBData;
    private javax.swing.JRadioButton jRBEstado;
    private javax.swing.JRadioButton jRBFornecedor;
    private javax.swing.JRadioButton jRBPago;
    private javax.swing.JRadioButton jRBTipo_Pagamento;
    private javax.swing.JRadioButton jRBTipo_Pedido;
    private javax.swing.JRadioButton jRBValor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jTBSeleciona;
    private javax.swing.JTextField jTValor_Final;
    private javax.swing.JTextField jTValor_Inicial;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

    private void populateFields() {
        pedidos = pdao.listaTodos();
        cCliente = new HashSet();
        cEstado = new HashSet();
        cCidade = new HashSet();
        cFornecedor = new HashSet();

        for (int i = 0; i < pedidos.size(); i++) {
            cCliente.add(pedidos.get(i).getCliente().getNome());
            cEstado.add(pedidos.get(i).getCliente().getEstado());
            cCidade.add(pedidos.get(i).getCliente().getCidade());
            for (int j = 0; j < pedidos.get(i).getItens().size(); j++) {
                cFornecedor.add(pedidos.get(i).getItens().get(j).getProduto().getFornecedor().getNome());
            }
        }

        clientes = new ArrayList<Cliente>(cCliente);
        fornecedores = new ArrayList<Fornecedor>(cFornecedor);

        Iterator i = cCliente.iterator();
        while (i.hasNext()) {
            jCBCliente.addItem(i.next());
        }

        i = null;
        i = cEstado.iterator();
        while (i.hasNext()) {
            jCBEstado.addItem(i.next());
        }

        i = null;
        i = cCidade.iterator();
        while (i.hasNext()) {
            jCBCidade.addItem(i.next());
        }
        i = null;
        i = cFornecedor.iterator();
        while (i.hasNext()) {
            jCBFornecedor.addItem(i.next());
        }

    }

    public String montaQuery() {
        String query = "SELECT pedido.data,cliente.cidade,cliente.estado,cliente.nome,"
                + "fornecedor.nome,sum(item.valor_alterado*item.quantidade),pedido.status,"
                + "pedido.tipo_pagamento,pedido.tipo_pedido,(sum(item.valor_alterado*item.quantidade)*cliente.frete)/100,pedido.id "
                + "FROM Pedido pedido "
                + "INNER JOIN pedido.cliente as cliente "
                + "INNER JOIN pedido.itens as item "
                + "INNER JOIN item.produto as produto "
                + "INNER JOIN produto.fornecedor as fornecedor "
                + "WHERE 1=1 ";

        if (jRBCliente.isSelected()) {
            cliente = jCBCliente.getSelectedItem().toString();
            query += "AND lower(cliente.nome) like lower('%" + cliente + "%') ";
        }
        if (jRBFornecedor.isSelected()) {
            fornecedor = jCBFornecedor.getSelectedItem().toString();
            query += "AND lower(fornecedor.nome) like lower('%" + fornecedor + "%')";
        }
        if (jRBCidade.isSelected()) {
            cidade = jCBCidade.getSelectedItem().toString();
            query += "AND lower(cliente.cidade) like lower('%" + cidade + "%') ";
        }
        if (jRBData.isSelected() && jDCData_Inicial.getDate() != null && jDCData_Final.getDate() != null) {
            dataInicial = jDCData_Inicial.getDate();
            dataFinal = jDCData_Final.getDate();
            query += "AND pedido.data BETWEEN '" + dataInicial + "' AND '" + dataFinal + "' ";
        } else if (jRBData.isSelected()) {
            JOptionPane.showMessageDialog(ListagemPedidos.this, "Pesquisa efetuada sem datas. \n Valores não foram escolhidos");
        }

        if (jRBEstado.isSelected()) {
            estado = jCBEstado.getSelectedItem().toString();
            query += "AND lower(cliente.estado) like lower('" + estado + "') ";
        }

        if (jRBPago.isSelected()) {
            if (jCBPago.getSelectedItem().toString().equals("Pago")) {
                pago = jCBPago.getSelectedItem().toString();
                query += "AND lower(pedido.status) like lower('" + pago + "') ";
            } else {
                query += "AND lower(pedido.status) is null ";
            }
        }
        if (jRBTipo_Pagamento.isSelected()) {
            tipo_pgto = jCBTipo_Pagamento.getSelectedItem().toString();
            query += "AND lower(pedido.tipo_pagamento) like lower('" + tipo_pgto + "') ";
        }
        if (jRBTipo_Pedido.isSelected()) {
            tipo_ped = jCBTipo_Pedido.getSelectedItem().toString();
            query += "AND lower(pedido.tipo_pedido) like lower('" + tipo_ped + "') ";
        }
        query += "GROUP BY pedido.data,cliente.cidade,cliente.estado,cliente.nome, fornecedor.nome, cliente.frete, pedido.status,"
                + "pedido.tipo_pagamento,pedido.tipo_pedido,pedido.id ";
        if (jRBValor.isSelected() && !jTValor_Inicial.getText().equals("") && !jTValor_Final.getText().equals("")) {
            //fazer sum e between
            valorInicial = Double.parseDouble(jTValor_Inicial.getText().replace(",", "."));
            valorFinal = Double.parseDouble(jTValor_Final.getText().replace(",", "."));
            query += " HAVING SUM(item.valor_alterado*item.quantidade) BETWEEN " + valorInicial + " AND " + valorFinal + " ";

        } else if (jRBValor.isSelected()) {

            JOptionPane.showMessageDialog(ListagemPedidos.this, "Pesquisa efetuada sem valores(R$). \n Valores(R$) não foram escolhidos");
        }
        return query;
    }

    private void hinter() {
        jLAjuda.setToolTipText("<html>Esta tela é responsável pela Listagem de Pedidos,<br>"
                + "onde a listagem pode ser efetuada escolhendo as cláusulas no lado esquerdo,<br>"
                + "sendo necessário preencher os botões ao lado e pesquisar.<br>"
                + "1. O botão \"Selecionar Tudo\" facilita o preenchimento dos campos escolhidos.<br>"
                + "2. O botão limpar reinicia a tela limpando os campos.<br>"
                + "3. Para consultar o Manual do Usuário, basta dar um duplo clique em \"Ajuda.\"</html>");
    }
}
